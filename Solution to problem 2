/*Problem 2: Given a square matrix, calculate the absolute difference between the sums of its diagonals.

For example, the square matrix array is shown below:

const arr = [

[1, 2, 3],

[4, 5, 6],

[9, 8, 9]

]

The left-to-right diagonal = 1 + 5 + 9 = 15. The right to left diagonal = 3 + 5 + 9 = 17. Their absolute difference is |15 - 17| = 2.

Goal: Your task is to create a function diagonalDifference. It must return an integer representing the absolute diagonal difference.*/

//-------------------------------------------------------------------------------------------------------------------------------------------//

#include <iostream>
#include <string>
#define MAX 100
using namespace std;
int  diagonalDifference(int arr[][MAX] , int n)
{
    int d1=0 , d2=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(i==j)
            {
                d1+=arr[i][j]; //left-to-right diagonal sum
            }
            if(i==n-j-1)
            {
                d2+=arr[i][j]; //right-to-left diagonal sum
            }
        }
    }
    return abs(d1-d2); //absolute difference
}

int main()
{
    int n=3; //array given 
    
    int arr[][MAX] = 
    {
        {1,2,3},
        {4,5,6},
        {9,8,9}
        
    };
    
    cout<<diagonalDifference(arr,n);
    return 0;
    
}

